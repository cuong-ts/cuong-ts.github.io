<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cuong Blogs</title><link>http://docs.cuong-dev.ml/docs/docker/</link><description>Recent content on Cuong Blogs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://docs.cuong-dev.ml/docs/docker/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://docs.cuong-dev.ml/docs/docker/checking-file-when-build-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.cuong-dev.ml/docs/docker/checking-file-when-build-docker/</guid><description>Checking file when build docker # Build this Dockerfile
FROM busybox RUN mkdir /tmp/build/ COPY . /tmp/build/ RUN du -ah tmp/build | sort -n -r | head -n 100 docker build .</description></item><item><title/><link>http://docs.cuong-dev.ml/docs/docker/disstroless-docker-image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.cuong-dev.ml/docs/docker/disstroless-docker-image/</guid><description>Disstroless docker image # FROM golang:1.12 as build-env WORKDIR /go/src/app ADD . /go/src/app RUN go get -d -v ./... RUN go build -o /go/bin/app FROM gcr.io/distroless/base COPY --from=build-env /go/bin/app / CMD [&amp;#34;/app&amp;#34;]</description></item><item><title/><link>http://docs.cuong-dev.ml/docs/docker/docker-how-to-cleanup-unused-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.cuong-dev.ml/docs/docker/docker-how-to-cleanup-unused-resources/</guid><description>Docker - How to cleanup (unused) resources # Docker - How to cleanup (unused) resources # Once in a while, you may need to cleanup resources (containers, volumes, images, networks) &amp;hellip;
delete volumes # // see: https://github.com/chadoe/docker-cleanup-volumes $ docker volume rm $(docker volume ls -qf dangling=true) $ docker volume ls -qf dangling=true | xargs -r docker volume rm delete networks # $ docker network ls $ docker network ls | grep &amp;#34;bridge&amp;#34; $ docker network rm $(docker network ls | grep &amp;#34;bridge&amp;#34; | awk &amp;#39;/ / { print $1 }&amp;#39;) remove docker images # // see: http://stackoverflow.</description></item><item><title/><link>http://docs.cuong-dev.ml/docs/docker/quick-install-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.cuong-dev.ml/docs/docker/quick-install-docker/</guid><description>Quick install docker # install docker with yum:
$ yum install docker add your user to docker group to able run docker command
$ sudo usermod -a -G docker your_user make sure docker run on start up
systemctl enable docker service docker start</description></item><item><title/><link>http://docs.cuong-dev.ml/docs/docker/remove-unused-docker-resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.cuong-dev.ml/docs/docker/remove-unused-docker-resource/</guid><description>Remove unused docker resource # TL;DR # remove all the things, such as images, container, network:
$ docker system prune stop all container running:
$ docker stop $(docker ps -q) remove all container:
$ docker rm $(docker ps -a -q) remove unused volumes:
$ docker volume prune remove unused images:
$ docker image prune</description></item><item><title/><link>http://docs.cuong-dev.ml/docs/docker/untitled/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.cuong-dev.ml/docs/docker/untitled/</guid><description>Best practices for building containers # Dockerfile tips and tricks # Consider the example below.
FROM debian # Copy application files COPY . /app # Install required system packages RUN apt-get update RUN apt-get -y install imagemagick curl software-properties-common gnupg vim ssh RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - RUN apt-get -y install nodejs # Install NPM dependencies RUN npm install --prefix /app EXPOSE 80 CMD [&amp;#34;npm&amp;#34;, &amp;#34;start&amp;#34;, &amp;#34;--prefix&amp;#34;, &amp;#34;app&amp;#34;] It takes 127.</description></item></channel></rss>