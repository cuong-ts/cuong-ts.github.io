<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docs.cuong-dev.ml</title><link>http://docs.cuong-dev.ml/cheatsheet/</link><description>Recent content on docs.cuong-dev.ml</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://docs.cuong-dev.ml/cheatsheet/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://docs.cuong-dev.ml/cheatsheet/bash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.cuong-dev.ml/cheatsheet/bash/</guid><description>Bash # #Getting started # hello.sh # #!/bin/bash VAR=&amp;#34;world&amp;#34; echo &amp;#34;Hello $VAR!&amp;#34; # =&amp;gt; Hello world! Execute the script
$ bash hello.sh Variables # NAME=&amp;#34;John&amp;#34; echo ${NAME} # =&amp;gt; John echo $NAME # =&amp;gt; John echo &amp;#34;$NAME&amp;#34; # =&amp;gt; John echo &amp;#39;$NAME&amp;#39; # =&amp;gt; $NAME echo &amp;#34;${NAME}!&amp;#34; # =&amp;gt; John! NAME = &amp;#34;John&amp;#34; # =&amp;gt; Error (about space) Comments # # This is an inline Bash comment.</description></item><item><title/><link>http://docs.cuong-dev.ml/cheatsheet/docker-cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.cuong-dev.ml/cheatsheet/docker-cheatsheet/</guid><description>Docker # #Getting started # Getting started # Create and run a container in background
$ docker run -d -p 80:80 docker/getting-started -d - Run the container in detached mode -p 80:80 - Map port 80 to port 80 in the container docker/getting-started - The image to use Create and run a container in foreground
$ docker run -it -p 8001:8080 --name my-nginx nginx -it - Interactive bash mode -p 8001:8080 - Map port 8001 to port 8080 in the container --name my-nginx - Specify a name nginx - The image to use General commands # docker ps List running containers docker ps -a List all containers docker ps -s List running containers (with CPU / memory) docker images List all images docker exec -it &amp;lt;container&amp;gt; bash Connecting to container docker logs &amp;lt;container&amp;gt; Shows container&amp;rsquo;s console log docker stop &amp;lt;container&amp;gt; Stop a container docker restart &amp;lt;container&amp;gt; Restart a container docker rm &amp;lt;container&amp;gt; Remove a container docker port &amp;lt;container&amp;gt; Shows container&amp;rsquo;s port mapping docker top &amp;lt;container&amp;gt; List processes docker kill &amp;lt;container&amp;gt; Kill a container Parameter &amp;lt;container&amp;gt; can be container id or name</description></item><item><title/><link>http://docs.cuong-dev.ml/cheatsheet/grep/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://docs.cuong-dev.ml/cheatsheet/grep/</guid><description>Grep # #Getting started # Usage # Search standard output (i.e. a stream of text)
$ grep [options] search_string Search for an exact string in file:
$ grep [options] search_string path/to/file Print lines in myfile.txt containing the string &amp;ldquo;mellon&amp;rdquo;
$ grep &amp;#39;mellon&amp;#39; myfile.txt Wildcards are accepted in filename.
Option examples # -i grep -i ^DA demo.txt Forgets about case sensitivity -w grep -w &amp;ldquo;of&amp;rdquo; demo.</description></item></channel></rss>